-- Script created by engo#0320 // https://engo.plasmic.site
local lplr = game.Players.LocalPlayer
local cha = lplr.Character
local root = cha.HumanoidRootPart

function turnOff(bool)
    if bool then
        for i,v in pairs(game.ReplicatedStorage.RemoteEvents:GetChildren()) do
            if v.Name == "Jumped" then
                v.Parent = game.Lighting
            end
        end
    elseif bool == false then
        for i,v in pairs(game.Lighting:GetChildren()) do
            if v.Name == "Jumped" then
                v.Parent = game.ReplicatedStorage.RemoteEvents
            end
        end
    end
end
turnOff(true)


function getPos()
    local pos = root.Position
    return pos
end

function getBoard(plr) -- plr = Player.Name
    for i,v in pairs(game:GetService("Workspace").Boards:GetChildren()) do
        local plr1 = v.Player1.Value
        local plr2 = v.Player2.Value
        if plr then
            if plr1 == plr or plr2 == plr then
                return v
            end
        else
            if plr1 == lplr or plr2 == lplr then
                return v
            end
        end
    end
end

local otherNum = nil
local otherActionNum = nil
local ownNum = nil
local ownAction = nil
function GetOtherPlayerOnBoard()
    local board = getBoard()
    if board.Player1.Value == lplr then
        if board.Player2.Value ~= nil then
            local otherPlayer = board.Player2.Value
            otherNum = "Player2"
            otherActionNum = "Player2Action"
            ownNum = "Player1"
            ownActionNum = "Player1Action"
            return otherPlayer
        end
    else
        if board.Player1.Value ~= nil then
            local otherPlayer = board.Player1.Value
            otherNum = "Player1"
            otherActionNum = "Player1Action"
            ownNum = "Player2"
            ownActionNum = "Player2Action"
            return otherPlayer
        end
    end
end
GetOtherPlayerOnBoard()

function Jump()
    game:GetService("ReplicatedStorage").RemoteEvents.Jumped:FireServer()
end

function getOtherAction()
    local board = getBoard()
    if otherActionNum~=nil then
        local x = board:FindFirstChild(otherActionNum)
        return x
    end
end

local closest = nil
function getClosestOfTypeOnBoard(control)
    for i,v in pairs(getBoard():GetDescendants()) do
        if v.Parent.Name == control then
            if closest == nil or (v.Position - getPos()).Magnitude < closest then
                closest = (v.Position - getPos()).Magnitude
                return v.Parent
            end
        end
    end
end

function moveToClosestOfTypeOnBoard(controlType)
    cha:MoveTo(getClosestOfTypeOnBoard(controlType).Pad.Position)
    wait(0.3)
    Jump()
end

function getOtherDropped()
    local amt = 0
    for i,v in pairs(game.Workspace.Dropped:GetChildren()) do
        if v.Owner == getOtherPlayerOnBoard() then
            amt = amt + 1
        end
    end
    return amt
end

function autoscam()
      local old = getPos()
      local board = getBoard()
      wait(0.05)
      moveToClosestOfTypeOnBoard("Close")
      wait(0.05)
      moveToClosestOfTypeOnBoard("Done")
      wait(0.05)
      cha:MoveTo(old)
end

getOtherAction().Changed:connect(function()
    if getOtherAction().Value == "Done" then -- Done,More,Close
            turnOff(false)
            autoscam()
            turnOff(true)
    end
end)
